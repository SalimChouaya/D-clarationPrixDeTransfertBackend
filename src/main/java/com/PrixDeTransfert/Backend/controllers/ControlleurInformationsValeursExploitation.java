package com.PrixDeTransfert.Backend.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.PrixDeTransfert.Backend.models.DéclarationPrixDeTransfert;
import com.PrixDeTransfert.Backend.models.InformationsOperationsBD;
import com.PrixDeTransfert.Backend.models.InformationsValeursExploitationBD;
import com.PrixDeTransfert.Backend.models.LigneActifCorporelBD;
import com.PrixDeTransfert.Backend.models.MontantTransactionsMethodeDeterminationPrixTransfertBD;
import com.PrixDeTransfert.Backend.repositories.InterfaceRepositoryInformationsValeursExploitation;
import com.PrixDeTransfert.Backend.services.ServiceInformationsValeursExploitation;

import jakarta.servlet.http.HttpSession;

@RestController
public class ControlleurInformationsValeursExploitation {
	@Autowired
	private ServiceInformationsValeursExploitation InformationsValeursExploitation ;
	
	@PostMapping("/DéclarationPrixDeTransfert/MontantTransaction/InformationsValeursExploitation")
	public InformationsValeursExploitationBD save(@RequestBody InformationsValeursExploitationBD  a,HttpSession session) {
		Long declarationid =(Long) session.getAttribute("Déclarationid");
		InformationsValeursExploitationBD InformationsValeursExploitationBD=InformationsValeursExploitation.save(a, declarationid);
		session.setAttribute("idMontantTransactions", InformationsValeursExploitationBD.getMontantTransactionsMethodeDeterminationPrixTransfert().getId());
		session.setAttribute("idInformationsOperations", InformationsValeursExploitationBD.getMontantTransactionsMethodeDeterminationPrixTransfert().getInformationsOperations().getId());
	session.setAttribute("idInformationsValeursExploitation", InformationsValeursExploitationBD.getId());
	return InformationsValeursExploitationBD;
	}
	@Autowired
	InterfaceRepositoryInformationsValeursExploitation InterfaceRepositoryInformationsValeursExploitation ;
	@Autowired
	com.PrixDeTransfert.Backend.repositories.InterfaceRepositoryDéclarationPrixDeTransfert InterfaceRepositoryDéclarationPrixDeTransfert ;
	@PutMapping("/MiseAjourInformationsValeursExploitation")
	public ResponseEntity<String> updateInformationsValeursExploitation(@RequestBody InformationsValeursExploitationBD updatedInformationsValeursExploitation,HttpSession session) {
	
	Long iddeclaration =(Long) session.getAttribute("Déclarationid");
	DéclarationPrixDeTransfert DéclarationPrixDeTransfert =InterfaceRepositoryDéclarationPrixDeTransfert.findDéclarationPrixDeTransfertById(iddeclaration);
	InformationsOperationsBD InformationsOperations=DéclarationPrixDeTransfert.getInformationsOperations();
	MontantTransactionsMethodeDeterminationPrixTransfertBD MontantTransactionsMethodeDeterminationPrixTransfert=InformationsOperations.getMontantTransactionsMethodeDeterminationPrixTransfert();
	InformationsValeursExploitationBD existingINformationsValeurs=MontantTransactionsMethodeDeterminationPrixTransfert.getInformationsValeursExploitation();
	
	existingINformationsValeurs.setTotalAchatsDepensesValeursExploitation(updatedInformationsValeursExploitation.getTotalAchatsDepensesValeursExploitation());
	existingINformationsValeurs.setTotalVentesRevenusValeursExploitation(updatedInformationsValeursExploitation.getTotalVentesRevenusValeursExploitation());
	session.setAttribute("idinformationsValeur", existingINformationsValeurs);
	session.setAttribute("idMontant", existingINformationsValeurs.getMontantTransactionsMethodeDeterminationPrixTransfert().getId());
	InterfaceRepositoryInformationsValeursExploitation.save(existingINformationsValeurs);
	return ResponseEntity.ok(" mise à jour avec succès");
	

}}
